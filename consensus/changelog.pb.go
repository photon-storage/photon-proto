// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: consensus/changelog.proto

package pbc

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/photon-storage/photon-proto/ext"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Change log type.
type ChangeLogType int32

const (
	// CHANGELOG_INVALID prevents from defaulting to a valid status.
	ChangeLogType_CHANGELOG_INVALID ChangeLogType = 0
	// CHANGELOG_AUDIT_START is an object audit start event.
	ChangeLogType_CHANGELOG_AUDIT_START ChangeLogType = 1
	// CHANGELOG_AUDIT_STOP is an object audit stop event.
	ChangeLogType_CHANGELOG_AUDIT_STOP ChangeLogType = 2
	// CHANGELOG_AUDIT_EXPIRATION is an object audit window expiration event.
	ChangeLogType_CHANGELOG_AUDIT_EXPIRATION ChangeLogType = 3
	// CHANGELOG_POR_START is an object PoR start event.
	ChangeLogType_CHANGELOG_POR_START ChangeLogType = 4
	// CHANGELOG_POR_START is an object PoR stop event.
	ChangeLogType_CHANGELOG_POR_STOP ChangeLogType = 5
	// CHANGELOG_POR_START is an object PoR window expiration event.
	ChangeLogType_CHANGELOG_POR_EXPIRATION ChangeLogType = 6
	// CHANGELOG_CONTRACT_EXPIRATION is a storage contract expiration event.
	ChangeLogType_CHANGELOG_CONTRACT_EXPIRATION ChangeLogType = 7
)

// Enum value maps for ChangeLogType.
var (
	ChangeLogType_name = map[int32]string{
		0: "CHANGELOG_INVALID",
		1: "CHANGELOG_AUDIT_START",
		2: "CHANGELOG_AUDIT_STOP",
		3: "CHANGELOG_AUDIT_EXPIRATION",
		4: "CHANGELOG_POR_START",
		5: "CHANGELOG_POR_STOP",
		6: "CHANGELOG_POR_EXPIRATION",
		7: "CHANGELOG_CONTRACT_EXPIRATION",
	}
	ChangeLogType_value = map[string]int32{
		"CHANGELOG_INVALID":             0,
		"CHANGELOG_AUDIT_START":         1,
		"CHANGELOG_AUDIT_STOP":          2,
		"CHANGELOG_AUDIT_EXPIRATION":    3,
		"CHANGELOG_POR_START":           4,
		"CHANGELOG_POR_STOP":            5,
		"CHANGELOG_POR_EXPIRATION":      6,
		"CHANGELOG_CONTRACT_EXPIRATION": 7,
	}
)

func (x ChangeLogType) Enum() *ChangeLogType {
	p := new(ChangeLogType)
	*p = x
	return p
}

func (x ChangeLogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeLogType) Descriptor() protoreflect.EnumDescriptor {
	return file_consensus_changelog_proto_enumTypes[0].Descriptor()
}

func (ChangeLogType) Type() protoreflect.EnumType {
	return &file_consensus_changelog_proto_enumTypes[0]
}

func (x ChangeLogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeLogType.Descriptor instead.
func (ChangeLogType) EnumDescriptor() ([]byte, []int) {
	return file_consensus_changelog_proto_rawDescGZIP(), []int{0}
}

type ChangeLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*ChangeLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ChangeLogs) Reset() {
	*x = ChangeLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_changelog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLogs) ProtoMessage() {}

func (x *ChangeLogs) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_changelog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLogs.ProtoReflect.Descriptor instead.
func (*ChangeLogs) Descriptor() ([]byte, []int) {
	return file_consensus_changelog_proto_rawDescGZIP(), []int{0}
}

func (x *ChangeLogs) GetLogs() []*ChangeLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ChangeLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Change log content.
	//
	// Types that are assignable to Change:
	//	*ChangeLog_Storage
	Change isChangeLog_Change `protobuf_oneof:"change"`
}

func (x *ChangeLog) Reset() {
	*x = ChangeLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_changelog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLog) ProtoMessage() {}

func (x *ChangeLog) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_changelog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLog.ProtoReflect.Descriptor instead.
func (*ChangeLog) Descriptor() ([]byte, []int) {
	return file_consensus_changelog_proto_rawDescGZIP(), []int{1}
}

func (m *ChangeLog) GetChange() isChangeLog_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *ChangeLog) GetStorage() *StorageChangeLog {
	if x, ok := x.GetChange().(*ChangeLog_Storage); ok {
		return x.Storage
	}
	return nil
}

type isChangeLog_Change interface {
	isChangeLog_Change()
}

type ChangeLog_Storage struct {
	Storage *StorageChangeLog `protobuf:"bytes,1,opt,name=storage,proto3,oneof"`
}

func (*ChangeLog_Storage) isChangeLog_Change() {}

type StorageChangeLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Change type.
	Type ChangeLogType `protobuf:"varint,1,opt,name=type,proto3,enum=photon.consensus.ChangeLogType" json:"type,omitempty"`
	// The root hash of the transaction (storage contract) associated with
	// this event.
	TxHash []byte `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty" ssz-size:"32"`
	// The public key of the depot specified in the storage contract.
	Depot []byte `protobuf:"bytes,3,opt,name=depot,proto3" json:"depot,omitempty" ssz-size:"48"`
	// The public key of the auditor assigned for auditing task.
	Auditor []byte `protobuf:"bytes,4,opt,name=auditor,proto3" json:"auditor,omitempty" ssz-size:"48"`
}

func (x *StorageChangeLog) Reset() {
	*x = StorageChangeLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_changelog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageChangeLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageChangeLog) ProtoMessage() {}

func (x *StorageChangeLog) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_changelog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageChangeLog.ProtoReflect.Descriptor instead.
func (*StorageChangeLog) Descriptor() ([]byte, []int) {
	return file_consensus_changelog_proto_rawDescGZIP(), []int{2}
}

func (x *StorageChangeLog) GetType() ChangeLogType {
	if x != nil {
		return x.Type
	}
	return ChangeLogType_CHANGELOG_INVALID
}

func (x *StorageChangeLog) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *StorageChangeLog) GetDepot() []byte {
	if x != nil {
		return x.Depot
	}
	return nil
}

func (x *StorageChangeLog) GetAuditor() []byte {
	if x != nil {
		return x.Auditor
	}
	return nil
}

var File_consensus_changelog_proto protoreflect.FileDescriptor

var file_consensus_changelog_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x1a, 0x11, 0x65,
	0x78, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3d, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2f,
	0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22,
	0x55, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x3e, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f,
	0x67, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1c, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x34, 0x38, 0x52, 0x05, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x12,
	0x20, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x34, 0x38, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x2a, 0xed, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4c, 0x4f, 0x47,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x4c, 0x4f, 0x47, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4c,
	0x4f, 0x47, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x12,
	0x1e, 0x0a, 0x1a, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4c, 0x4f, 0x47, 0x5f, 0x41, 0x55, 0x44,
	0x49, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4c, 0x4f, 0x47, 0x5f, 0x50, 0x4f, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x4c, 0x4f, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x05,
	0x12, 0x1c, 0x0a, 0x18, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4c, 0x4f, 0x47, 0x5f, 0x50, 0x4f,
	0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x21,
	0x0a, 0x1d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4c, 0x4f, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54,
	0x52, 0x41, 0x43, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x07, 0x42, 0xa2, 0x01, 0x0a, 0x23, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x42, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x6e, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x3b, 0x70, 0x62, 0x63, 0xaa, 0x02, 0x16, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0xca, 0x02, 0x16,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_consensus_changelog_proto_rawDescOnce sync.Once
	file_consensus_changelog_proto_rawDescData = file_consensus_changelog_proto_rawDesc
)

func file_consensus_changelog_proto_rawDescGZIP() []byte {
	file_consensus_changelog_proto_rawDescOnce.Do(func() {
		file_consensus_changelog_proto_rawDescData = protoimpl.X.CompressGZIP(file_consensus_changelog_proto_rawDescData)
	})
	return file_consensus_changelog_proto_rawDescData
}

var file_consensus_changelog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_consensus_changelog_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_consensus_changelog_proto_goTypes = []interface{}{
	(ChangeLogType)(0),       // 0: photon.consensus.ChangeLogType
	(*ChangeLogs)(nil),       // 1: photon.consensus.ChangeLogs
	(*ChangeLog)(nil),        // 2: photon.consensus.ChangeLog
	(*StorageChangeLog)(nil), // 3: photon.consensus.StorageChangeLog
}
var file_consensus_changelog_proto_depIdxs = []int32{
	2, // 0: photon.consensus.ChangeLogs.logs:type_name -> photon.consensus.ChangeLog
	3, // 1: photon.consensus.ChangeLog.storage:type_name -> photon.consensus.StorageChangeLog
	0, // 2: photon.consensus.StorageChangeLog.type:type_name -> photon.consensus.ChangeLogType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_consensus_changelog_proto_init() }
func file_consensus_changelog_proto_init() {
	if File_consensus_changelog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_consensus_changelog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_changelog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_changelog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageChangeLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_consensus_changelog_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ChangeLog_Storage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consensus_changelog_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_consensus_changelog_proto_goTypes,
		DependencyIndexes: file_consensus_changelog_proto_depIdxs,
		EnumInfos:         file_consensus_changelog_proto_enumTypes,
		MessageInfos:      file_consensus_changelog_proto_msgTypes,
	}.Build()
	File_consensus_changelog_proto = out.File
	file_consensus_changelog_proto_rawDesc = nil
	file_consensus_changelog_proto_goTypes = nil
	file_consensus_changelog_proto_depIdxs = nil
}
