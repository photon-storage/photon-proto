// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: consensus/auditor.proto

package pbc

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/photon-storage/photon-proto/ext"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditorStatus int32

const (
	AuditorStatus_AUDITOR_UNKNOWN_STATUS AuditorStatus = 0
	AuditorStatus_AUDITOR_PENDING        AuditorStatus = 1
	AuditorStatus_AUDITOR_ACTIVE         AuditorStatus = 2
	AuditorStatus_AUDITOR_EXITING        AuditorStatus = 3
	AuditorStatus_AUDITOR_EXITED         AuditorStatus = 4
)

// Enum value maps for AuditorStatus.
var (
	AuditorStatus_name = map[int32]string{
		0: "AUDITOR_UNKNOWN_STATUS",
		1: "AUDITOR_PENDING",
		2: "AUDITOR_ACTIVE",
		3: "AUDITOR_EXITING",
		4: "AUDITOR_EXITED",
	}
	AuditorStatus_value = map[string]int32{
		"AUDITOR_UNKNOWN_STATUS": 0,
		"AUDITOR_PENDING":        1,
		"AUDITOR_ACTIVE":         2,
		"AUDITOR_EXITING":        3,
		"AUDITOR_EXITED":         4,
	}
)

func (x AuditorStatus) Enum() *AuditorStatus {
	p := new(AuditorStatus)
	*p = x
	return p
}

func (x AuditorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_consensus_auditor_proto_enumTypes[0].Descriptor()
}

func (AuditorStatus) Type() protoreflect.EnumType {
	return &file_consensus_auditor_proto_enumTypes[0]
}

func (x AuditorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditorStatus.Descriptor instead.
func (AuditorStatus) EnumDescriptor() ([]byte, []int) {
	return file_consensus_auditor_proto_rawDescGZIP(), []int{0}
}

type Auditor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 48 byte BLS public key of the auditor.
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" ssz-size:"48"`
	// Auditor staking balance.
	Balance uint64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	// Epoch when the auditor became eligible for activation.
	// This field is FAR_FUTURE_EPOCH if the auditor has not been activated.
	ActivationEligibilityEpoch Epoch `protobuf:"varint,3,opt,name=activation_eligibility_epoch,json=activationEligibilityEpoch,proto3" json:"activation_eligibility_epoch,omitempty" cast-type:"Epoch"`
	// Epoch when the auditor was activated.
	// This field is FAR_FUTURE_EPOCH if the auditor has not been activated.
	ActivationEpoch Epoch `protobuf:"varint,4,opt,name=activation_epoch,json=activationEpoch,proto3" json:"activation_epoch,omitempty" cast-type:"Epoch"`
	// Epoch when the auditor was exited. This field is FAR_FUTURE_EPOCH if
	// the auditor has not exited.
	ExitEpoch Epoch `protobuf:"varint,5,opt,name=exit_epoch,json=exitEpoch,proto3" json:"exit_epoch,omitempty" cast-type:"Epoch"`
	// Epoch when the auditor is eligible to withdraw their funds. This field
	// is FAR_FUTURE_EPOCH if the auditor has not exited.
	WithdrawableEpoch Epoch `protobuf:"varint,6,opt,name=withdrawable_epoch,json=withdrawableEpoch,proto3" json:"withdrawable_epoch,omitempty" cast-type:"Epoch"`
	// Decoder is a public key encoded in multikey format for decoding data
	// encoded by this auditor.
	Decoder []byte `protobuf:"bytes,7,opt,name=decoder,proto3" json:"decoder,omitempty" ssz-size:"512"`
}

func (x *Auditor) Reset() {
	*x = Auditor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_auditor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auditor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auditor) ProtoMessage() {}

func (x *Auditor) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_auditor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auditor.ProtoReflect.Descriptor instead.
func (*Auditor) Descriptor() ([]byte, []int) {
	return file_consensus_auditor_proto_rawDescGZIP(), []int{0}
}

func (x *Auditor) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Auditor) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Auditor) GetActivationEligibilityEpoch() Epoch {
	if x != nil {
		return x.ActivationEligibilityEpoch
	}
	return Epoch(0)
}

func (x *Auditor) GetActivationEpoch() Epoch {
	if x != nil {
		return x.ActivationEpoch
	}
	return Epoch(0)
}

func (x *Auditor) GetExitEpoch() Epoch {
	if x != nil {
		return x.ExitEpoch
	}
	return Epoch(0)
}

func (x *Auditor) GetWithdrawableEpoch() Epoch {
	if x != nil {
		return x.WithdrawableEpoch
	}
	return Epoch(0)
}

func (x *Auditor) GetDecoder() []byte {
	if x != nil {
		return x.Decoder
	}
	return nil
}

type AuditorStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A 48 byte auditor public key.
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty" ssz-size:"48"`
}

func (x *AuditorStatusRequest) Reset() {
	*x = AuditorStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_auditor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditorStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditorStatusRequest) ProtoMessage() {}

func (x *AuditorStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_auditor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditorStatusRequest.ProtoReflect.Descriptor instead.
func (*AuditorStatusRequest) Descriptor() ([]byte, []int) {
	return file_consensus_auditor_proto_rawDescGZIP(), []int{1}
}

func (x *AuditorStatusRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type AuditorStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The corresponding auditor status.
	Status AuditorStatus `protobuf:"varint,1,opt,name=status,proto3,enum=photon.consensus.AuditorStatus" json:"status,omitempty"`
	// The epoch in the chain in which the auditor is determined as active.
	ActivationEpoch Epoch `protobuf:"varint,2,opt,name=activation_epoch,json=activationEpoch,proto3" json:"activation_epoch,omitempty" cast-type:"Epoch"`
}

func (x *AuditorStatusResponse) Reset() {
	*x = AuditorStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_auditor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditorStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditorStatusResponse) ProtoMessage() {}

func (x *AuditorStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_auditor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditorStatusResponse.ProtoReflect.Descriptor instead.
func (*AuditorStatusResponse) Descriptor() ([]byte, []int) {
	return file_consensus_auditor_proto_rawDescGZIP(), []int{2}
}

func (x *AuditorStatusResponse) GetStatus() AuditorStatus {
	if x != nil {
		return x.Status
	}
	return AuditorStatus_AUDITOR_UNKNOWN_STATUS
}

func (x *AuditorStatusResponse) GetActivationEpoch() Epoch {
	if x != nil {
		return x.ActivationEpoch
	}
	return Epoch(0)
}

var File_consensus_auditor_proto protoreflect.FileDescriptor

var file_consensus_auditor_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x1a, 0x11, 0x65, 0x78, 0x74,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4,
	0x02, 0x0a, 0x07, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06,
	0x8a, 0xb5, 0x18, 0x02, 0x34, 0x38, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x1c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x09, 0x82, 0xb5, 0x18, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x1a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x09, 0x82, 0xb5, 0x18, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x28,
	0x0a, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x09, 0x82, 0xb5, 0x18, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x09, 0x65,
	0x78, 0x69, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x38, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x09, 0x82, 0xb5, 0x18, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52,
	0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x21, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x07, 0x8a, 0xb5, 0x18, 0x03, 0x35, 0x31, 0x32, 0x52, 0x07, 0x64, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x14, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x34, 0x38, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x09, 0x82, 0xb5, 0x18, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x0f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x2a, 0x7d, 0x0a,
	0x0d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x55, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x55,
	0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x55, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x45,
	0x58, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x55, 0x44, 0x49,
	0x54, 0x4f, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x04, 0x42, 0x98, 0x01, 0x0a,
	0x1e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x42,
	0x0c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x3b, 0x70, 0x62, 0x63, 0xaa, 0x02, 0x16, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0xca, 0x02,
	0x16, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x63, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_consensus_auditor_proto_rawDescOnce sync.Once
	file_consensus_auditor_proto_rawDescData = file_consensus_auditor_proto_rawDesc
)

func file_consensus_auditor_proto_rawDescGZIP() []byte {
	file_consensus_auditor_proto_rawDescOnce.Do(func() {
		file_consensus_auditor_proto_rawDescData = protoimpl.X.CompressGZIP(file_consensus_auditor_proto_rawDescData)
	})
	return file_consensus_auditor_proto_rawDescData
}

var file_consensus_auditor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_consensus_auditor_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_consensus_auditor_proto_goTypes = []interface{}{
	(AuditorStatus)(0),            // 0: photon.consensus.AuditorStatus
	(*Auditor)(nil),               // 1: photon.consensus.Auditor
	(*AuditorStatusRequest)(nil),  // 2: photon.consensus.AuditorStatusRequest
	(*AuditorStatusResponse)(nil), // 3: photon.consensus.AuditorStatusResponse
}
var file_consensus_auditor_proto_depIdxs = []int32{
	0, // 0: photon.consensus.AuditorStatusResponse.status:type_name -> photon.consensus.AuditorStatus
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_consensus_auditor_proto_init() }
func file_consensus_auditor_proto_init() {
	if File_consensus_auditor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_consensus_auditor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auditor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_auditor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditorStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_auditor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditorStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consensus_auditor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_consensus_auditor_proto_goTypes,
		DependencyIndexes: file_consensus_auditor_proto_depIdxs,
		EnumInfos:         file_consensus_auditor_proto_enumTypes,
		MessageInfos:      file_consensus_auditor_proto_msgTypes,
	}.Build()
	File_consensus_auditor_proto = out.File
	file_consensus_auditor_proto_rawDesc = nil
	file_consensus_auditor_proto_goTypes = nil
	file_consensus_auditor_proto_depIdxs = nil
}
